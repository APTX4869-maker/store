<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace 用于指定当前的映射文件和哪个接口进行映射，需要制定接口的全路径-->
<mapper namespace="com.cy.store.mapper.UserMapper">
    <!--自定义映射规则 使用resultMap来定义映射规则-->
    <!--
    id 属性 表示给这个映射非配的唯一一个ID值
    type 属性 取值是一个类，表示的是数据库中的查询结果与java中的哪个实体类进行映射
    -->
    <resultMap id="userEntityMap" type="com.cy.store.entity.User">
        <!--将表名称和类名称不一致的字段进行映射 一致的不需要匹配
        column表示表中的字段名称 property表示类中的属性名称
        在定义映射规则时 主键是不可以省略的
        -->
        <id column="uid" property="uid"></id>
        <result column="username" property="userName"></result>
        <result column="is_delete" property="isDelete"></result>
        <result column="created_user" property="createdUser"></result>
        <result column="created_time" property="createdTime"></result>
        <result column="modified_user" property="modifiedUser"></result>
        <result column="modified_time" property="modifiedTime"></result>
    </resultMap>

    <!--id的值表示接口中方法的名称-->
    <!--useGeneratedKeys 表示主键开启自增 keyProperty 指定自增的主键-->
    <insert id="insertUser" useGeneratedKeys="true" keyProperty="uid">
        INSERT INTO t_user (username, password, salt, phone, email, gender, avatar, is_delete, created_user,
                            created_time, modified_user, modified_time)
        VALUES ( #{userName}, #{password}, #{salt}, #{phone}, #{email}, #{gender}, #{avatar}, #{isDelete}
               , #{createdUser}
               , #{createdTime}, #{modifiedUser}, #{modifiedTime})
    </insert>

    <!--
    resultType 表示查询的结果集类型 只需要指定对应映射的类型 并且包含完整的接口 resultType="com.cy.store.entity.User"
    resultMap="userEntityMap" 则是因为表字段和类字段不一致时 通过指定自定义的映射规则 来定义返回结果
    -->
    <select id="findUser" resultMap="userEntityMap">
        SELECT * FROM t_user WHERE username = #{userName}
    </select>


    <select id="findByUid" resultMap="userEntityMap">
        SELECT * FROM t_user WHERE uid = #{uid}
    </select>

    <update id="updatePasswordByUid" >
        UPDATE t_user SET
        password = #{password},
        modified_user = #{modifiedUser},
        modified_time = #{modifiedTime}
        WHERE uid = #{uid}
    </update>

</mapper>